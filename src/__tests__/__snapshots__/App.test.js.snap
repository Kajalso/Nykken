// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing and takes snapshot takes snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="App"
      >
        <h2>
          Risvollan measurement station
        </h2>
        <div
          class="title-buttons"
        >
          <h2
            class="title"
          >
            Sensor measurements
          </h2>
          <div
            class="buttons"
          >
            <button
              class="button undefined"
            >
              <img
                alt="Button icon"
                src="edit_icon.svg"
              />
              Edit dashboard
            </button>
            <button
              class="button undefined"
            >
              <img
                alt="Button icon"
                src="plus_icon.svg"
              />
              Create group
            </button>
            <button
              class="button undefined"
            >
              <img
                alt="Button icon"
                src="plus_icon.svg"
              />
              Create custom chart
            </button>
          </div>
        </div>
        <div
          class="sensor-grid"
        >
          <div
            class="sensor-chart"
          >
            <label>
              Sensor:
            </label>
            <select />
            <div
              class="date-picker"
            >
              <label>
                From:
              </label>
              <input
                type="date"
                value="2020-08-08"
              />
              <input
                step="1"
                type="time"
                value="00:00:00"
              />
              <label>
                Until:
              </label>
              <input
                type="date"
                value="2020-08-08"
              />
              <input
                step="1"
                type="time"
                value="00:11:00"
              />
            </div>
            <button
              type="button"
            >
              Fetch data
            </button>
            <div>
              Loading ...
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      class="ReactModalPortal"
    />
    <div
      class="ReactModalPortal"
    />
  </body>,
  "container": <div>
    <div
      class="App"
    >
      <h2>
        Risvollan measurement station
      </h2>
      <div
        class="title-buttons"
      >
        <h2
          class="title"
        >
          Sensor measurements
        </h2>
        <div
          class="buttons"
        >
          <button
            class="button undefined"
          >
            <img
              alt="Button icon"
              src="edit_icon.svg"
            />
            Edit dashboard
          </button>
          <button
            class="button undefined"
          >
            <img
              alt="Button icon"
              src="plus_icon.svg"
            />
            Create group
          </button>
          <button
            class="button undefined"
          >
            <img
              alt="Button icon"
              src="plus_icon.svg"
            />
            Create custom chart
          </button>
        </div>
      </div>
      <div
        class="sensor-grid"
      >
        <div
          class="sensor-chart"
        >
          <label>
            Sensor:
          </label>
          <select />
          <div
            class="date-picker"
          >
            <label>
              From:
            </label>
            <input
              type="date"
              value="2020-08-08"
            />
            <input
              step="1"
              type="time"
              value="00:00:00"
            />
            <label>
              Until:
            </label>
            <input
              type="date"
              value="2020-08-08"
            />
            <input
              step="1"
              type="time"
              value="00:11:00"
            />
          </div>
          <button
            type="button"
          >
            Fetch data
          </button>
          <div>
            Loading ...
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
